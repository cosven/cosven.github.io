* PEP 572

** 摘要
这个 PEP 提出了一种使用[[#faq-1][表达式]]来赋值的方法： ~NAME := expr~

** 基本原理
给表达式的值命名是编写代码中一个重要的部分，它能让我们可以用一个形象
的名字来表示这个值；也给我们重复使用这个值提供了方便。目前，Python
提供了[[#faq-1][声明]]的方式，但是声明的方式有一定局限性，比如说：声明在
list comprehension 中没办法使用。


** Related FAQ
*** Statement vs Expression
:PROPERTIES:
:CUSTOM_ID: faq-1
:END:

*** Variable Scope in Comprehension


--------------------------------------------------

** 讨论
*** 正方

*** 反方
- My main concern is we're introducing a second different way of doing
something which is really fundamental.

*** 疑问方
- why it requires creating a new operator instead of repurposing the
 = operator.

*** 一些点
- Comprehensions have a 3-to-1 or 4-to-1 ratio of code line shrinkage.
In contrast, an assignment expression only has a 2-to-1 code line compression ratio.

- to make them so DWIM ("Do what I Mean") that in practice you almost
 never have to worry about them

*** Guido

- Honestly, whenever I read code that uses itertools, I end up
making a trip to StackOverflow.
- I'd rather say that it is its appeal to both beginners and experts
 (and everyone in between).
