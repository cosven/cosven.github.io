* 零散
** tcpdump usage

TCP FLAGS

PSH     =  [P] (Push Data)
RST     =  [R] (Reset Connection)
SYN     =  [S] (Start Connection)
FIN     =  [F] (Finish Connection)
SYN-ACK =  [S.] (SynAcK Packet)
           [.] (No Flag Set)

- 指定 interface =tcpdump -i en0=
- 指定主机和端口 =tcpdump tcp port 23 and host 10.1.0.1=

Q：在 osx 上，建立连接会有 4 次握手？
#+BEGIN_SRC
19:29:37.157437 IP localhost.54871 > localhost.23333: Flags [S], seq 4183558234, win 65535, options [mss 16344,nop,wscale 5,nop,nop,TS val 3374013330 ecr 0,sackOK,eol], length 0
19:29:37.157538 IP localhost.23333 > localhost.54871: Flags [S.], seq 1658355569, ack 4183558235, win 65535, options [mss 16344,nop,wscale 5,nop,nop,TS val 3374013330 ecr 3374013330,sackOK,eol], length 0
19:29:37.157554 IP localhost.54871 > localhost.23333: Flags [.], ack 1, win 12759, options [nop,nop,TS val 3374013330 ecr 3374013330], length 0
19:29:37.157567 IP localhost.23333 > localhost.54871: Flags [.], ack 1, win 12759, options [nop,nop,TS val 3374013330 ecr 3374013330], length 0
#+END_SRC

在 wireshark 中可以发现，最后一个包的作用是 TCP WINDOW UPDATE，并不是必须的。
在 Linux 上测试的话，我们可以发现，不会出现最后这个包。
那为什么要有 TCP WINDOW UPDATE 这么一次操作呢？暂不深究 [[https://stackoverflow.com/questions/1466307/what-is-a-tcp-window-update][参考资料]]

** 用 dnsmasq 干点小事情

*本笔记只记录 dnsmasq 作为域名解析服务器的一些用法及原理解释*

dnsmasq 能干啥？可以把它用作域名解析服务器，缓存 DNS 请求结果。

*** 一个大致的域名解析过程

1. 程序发起一个 DNS query
2. 看 hosts 文件是否有 IP 地址映射，没有的话看本地 DNS 缓存
3. 从 /etc/resolv.conf 获取 dns server 地址
4. 将 DNS query 请求丢给 DNS server
5. 然后 DNS server 进行一系列事情帮助完成解析

dnsmasq 在这个步骤中充当 DNS server 的作用
牢记：它充当的是 DNS server 的作用。

*** 下面是在 osx 下安装使用 dnsmasq 的的记录

1. 安装启动 dnsmasq
```
brew install dnsmasq
sudo brew services start dnsmasq
# 使用下面命令看看 53 端口是否被 dnsmasq 占用
# sudo lsof -i:53
```
2. 解析 awesome.mine 域名

*操作流程理论分析*

1. 启动 dnsmasq (启动一个 dns server，它的地址默认是 127.0.0.1)
2. 配置 dnsmasq，让它解析 awesome.mine 域名
3. 在 /etc/resolv.conf 加入 dns server 地址（127.0.0.1）
4. OK

*具体的操作命令*

```
# vi /usr/local/etc/dnsmasq.conf
# 在最下面加入一行
# `address=/mine/127.0.0.1`

# vi /etc/resolv.conf
# 在前面加入一行
# `namesearver 127.0.0.1`

# sudo brew services restart dnsmasq
```
