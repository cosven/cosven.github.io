* Python 2to3


** tlcache

- [ ] pickle CPU 密集型？这是类似的缓存系统都有的弊病么
- [ ] 使用 md5 作为 key 的哈希算法，是否也特别耗 CPU？能否改进
- [ ] 在 JSON 横行的年代，pickle 的应用价值有多高？

*** min(None, 1)
Python 3 中两个对象进行比较时，不会进行隐式的类型转换。
比如在 Python 2 中： None < 1, 1 < '2'。这些在 Python 中都会 raise。

*** zip and izip
*** pickle

pickle 原理未知

1. pickle 需要知道一个实例对应的类的路径
2. pickle 的 protocol 被用在 copy 模块中

> Instagram 最终选择让 Python 2 和 Python 3 使用完全不同的 namespace
来访问 memcache。通过将二者的数据读写完全隔开来解决这个问题。

Python 3 的 pickle 协议最高是 4，Python 2 中协议最高是 2。

**** pickle vs marshal
- The pickle module keeps track of the objects it has already serialized,
so that later references to the same object won’t be serialized again
- pickle can save and restore class instances transparently,
however the class definition must be importable and live in the same module
as when the object was stored. (can serialize user-defined classes)
- The pickle serialization format is guaranteed to be backwards compatible
 across Python releases.

**** data stream format
- pickle 用的数据格式是 Python 特有的，别的语言用不了。
- 默认情况下，使用可打印的 ASCII 来展示。比 Binary 格式相对会长，
性能也没 Binary 好，但是易于 debug，可以被编辑器打开。

**** What can be pickled and unpickled
picklable functions and classes must be defined in the top level of a module.

** cfbclient

*** open vs io.open
- [X] open 'r' mode 读出来是 unicode/str/bytes?
- [X] open 对应的是 BytesIO 还是 StringIO

一般来说：文件现在有两种打开姿势：一种用 builtins 的 open 函数；也可以用
io.open 来开。在 Python 3 中，两者是一样的作用。在 Python 2 中，builtins
的 open 函数功能没有 io.open 强大（看函数参数多少可知），另外，builtins 的
open 函数返回的总是 str(bytes)（就算是 mode 是 r），而 io.open 表现则不一样，
在 r mode 下会返回 unicode。
